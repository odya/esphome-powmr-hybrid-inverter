uart:
  - id: uart_pzem
    baud_rate: 9600
    tx_pin: ${pzem_tx_pin}
    rx_pin: ${pzem_rx_pin}
#    debug:
#      direction: BOTH
#      dummy_receiver: false

modbus:
  - id: modbus_pzem
    uart_id: uart_pzem

sensor:
  - platform: pzemac
    modbus_id: modbus_pzem
    update_interval: ${pzem_update_interval}
    voltage:
      name: "Grid PZEM Voltage"
      id: pzem_grid_voltage
      internal: true
      filters:
        - &mafilter quantile:
            window_size: 5
            send_every: 1
            send_first_at: 1
            quantile: .9
        - offset: ${pzem_voltage_offset}
    current:
      name: "Grid Current"
      id: pzem_grid_current
      filters:
        - *mafilter
        - offset: ${pzem_current_offset}
    power:
      name: "Grid Power"
      id: pzem_grid_power
      internal: true
      filters:
        - *mafilter
    power_factor:
      name: "Grid Power Factor"
      id: pzem_grid_power_factor
      filters:
        - *mafilter

  - platform: template
    name: "Grid Power"
    unit_of_measurement: "W"
    device_class: power
    state_class: measurement
    accuracy_decimals: 0
    update_interval: ${update_interval}
    lambda: |-
      return id(pzem_grid_current).state * id(pzem_grid_voltage).state * id(pzem_grid_power_factor).state;

# extend "Grid Voltage" for pzem
  - id: !extend grid_voltage 
    on_raw_value:
      then:
        - lambda: !lambda |-
            if (!id(grid_active).state) {
              id(pzem_grid_voltage).publish_state(0.0);
              id(pzem_grid_current).publish_state(${pzem_current_offset} * -1);
              id(pzem_grid_power).publish_state(0.0);
              id(pzem_grid_power_factor).publish_state(0.0);
            }
